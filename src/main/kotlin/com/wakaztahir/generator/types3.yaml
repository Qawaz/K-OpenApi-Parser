modelType: OpenApi3
imports:
  Overlay: com.reprezen.jsonoverlay.Overlay
  Collection: kotlin.collections.Collection
  ReferenceRegistry: com.reprezen.jsonoverlay.ReferenceRegistry
  Inject: com.google.inject.Inject
decls:
- extPat: x-.+
- noextPat: (?!x-).*
- namePat: '[a-zA-Z0-9\._-]+'
- noextNamePat: (?!x-)[a-zA-Z0-9\._-]+
- pathPat: /.*
- extName: extension
- extDef: &id001
    name: Extension
    type: Any
    parentPath: ''
    structure: map
    keyPattern: x-.+
types:
- name: OpenApi3
  imports:
    intf:
    - Collection
    impl:
    - ReferenceRegistry
    - Overlay
    - JsonObject
    - JsonNull
    - Collection
  fields:
    openapi:
      name: OpenApi
    info: {
      }
    servers:
      structure: collection
    paths:
      structure: map
      keyPattern: /.*
    pathsExtension:
      parentPath: paths
      keyPattern: x-.+
      structure: map
      type: Any
      name: PathsExtension
    components/schemas:
      structure: map
      type: Schema
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/responses:
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/parameters:
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/examples:
      type: Example
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/requestBodies:
      name: RequestBody
      plural: RequestBodies
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/headers:
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/securitySchemes:
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/links:
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    components/callbacks:
      structure: map
      keyPattern: (?!x-)[a-zA-Z0-9\._-]+
    componentsExtension:
      parentPath: components
      name: ComponentsExtension
      type: Any
      structure: map
      keyPattern: x-.+
    security:
      name: SecurityRequirement
      structure: collection
    tags:
      structure: collection
    externalDocs: {
      }
    extension: *id001
- name: OAuthFlow
  fields:
    authorizationUrl: {
      }
    tokenUrl: {
      }
    refreshUrl: {
      }
    scopes:
      structure: map
      keyPattern: (?!x-).*
    scopesExtension:
      parentPath: scopes
      keyPattern: x-.+
      structure: map
      type: Any
      name: ScopesExtension
    extension: *id001
- name: Tag
  fields:
    name: {
      }
    description: {
      }
    externalDocs: {
      }
    extension: *id001
- name: SecurityScheme
  imports:
    impl:
    - Overlay
  fields:
    type: {
      }
    description: {
      }
    name: {
      }
    in: {
      }
    scheme: {
      }
    bearerFormat: {
      }
    flow/implicit:
      name: ImplicitOAuthFlow
      type: OAuthFlow
    flow/password:
      name: PasswordOAuthFlow
      type: OAuthFlow
    flow/clientCredentials:
      name: ClientCredentialsOAuthFlow
      type: OAuthFlow
    flow/authorizationCode:
      name: AuthorizationCodeOAuthFlow
      type: OAuthFlow
    flowExtension:
      parentPath: flow
      name: OAuthFlowsExtension
      type: Any
      structure: map
      keyPattern: x-.+
    openIdConnectUrl: {
      }
    extension: *id001
- name: Info
  fields:
    title: {
      }
    description: {
      }
    termsOfService: {
      }
    contact: {
      }
    license: {
      }
    version: {
      }
    extension: *id001
- name: Contact
  fields:
    name: {
      }
    url: {
      }
    email: {
      }
    extension: *id001
- name: License
  fields:
    name: {
      }
    url: {
      }
    extension: *id001
- name: Server
  fields:
    url: {
      }
    description: {
      }
    variables:
      name: ServerVariable
      structure: map
      keyPattern: (?!x-)[a-zA-Z0-9\._-]+
    variablesExtension:
      parentPath: variables
      keyPattern: x-.+
      structure: map
      type: Any
      name: VariablesExtension
    extension: *id001
- name: ServerVariable
  fields:
    enum:
      name: EnumValue
      type: String
      structure: collection
    default:
      type: String
    description: {
      }
    extension: *id001
- name: Path
  imports:
    impl:
    - Overlay
  fields:
    summary: {
      }
    description: {
      }
    operations:
      structure: map
      parentPath: ''
      keyPattern: get|put|post|delete|options|head|patch|trace
    get:
      type: Operation
      noImpl: true
    put:
      type: Operation
      noImpl: true
    post:
      type: Operation
      noImpl: true
    delete:
      type: Operation
      noImpl: true
    options:
      type: Operation
      noImpl: true
    head:
      type: Operation
      noImpl: true
    patch:
      type: Operation
      noImpl: true
    trace:
      type: Operation
      noImpl: true
    servers:
      structure: collection
    parameters:
      structure: collection
    extension: *id001
- name: Operation
  fields:
    tags:
      type: String
      structure: collection
    summary: {
      }
    description: {
      }
    externalDocs: {
      }
    operationId: {
      }
    parameters:
      structure: collection
    requestBody: {
      }
    responses:
      structure: map
      keyPattern: default|(\d[0-9X]{2})
    responsesExtension:
      parentPath: responses
      name: ResponsesExtension
      type: Any
      structure: map
      keyPattern: x-.+
    callbacks:
      structure: map
      keyPattern: (?!x-)[a-zA-Z0-9\._-]+
    callbacksExtension:
      parentPath: callbacks
      keyPattern: x-.+
      structure: map
      type: Any
      name: CallbacksExtension
    deprecated:
      type: Boolean
    security:
      name: SecurityRequirement
      structure: collection
    servers:
      structure: collection
    extension: *id001
- name: Callback
  imports:
    impl:
    - Overlay
  fields:
    callbackPaths:
      type: Path
      structure: map
      parentPath: ''
      keyPattern: (?!x-).*
      keyName: expression
    extension: *id001
- name: SecurityRequirement
  fields:
    requirement:
      type: SecurityParameter
      parentPath: ''
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
- name: SecurityParameter
  imports:
    impl:
      - JsonNull
      - JsonArray
  fields:
    parameter:
      type: String
      parentPath: ''
      structure: collection
- name: Response
  imports:
    impl:
    - Overlay
  fields:
    description: {
      }
    headers:
      structure: map
    content:
      name: ContentMediaType
      type: MediaType
      structure: map
    links:
      structure: map
    extension: *id001
- name: Link
  imports:
    impl:
    - Overlay
  fields:
    operationId: {
      }
    operationRef: {
      }
    parameters:
      type: String
      structure: map
    description: {
      }
    server:
      type: Server
    requestBody:
      type: Any
    extension: *id001
- name: RequestBody
  imports:
    impl:
    - Overlay
  fields:
    description: {
      }
    content:
      name: ContentMediaType
      type: MediaType
      structure: map
    required:
      type: Boolean
    extension: *id001
- name: MediaType
  fields:
    schema: {
      }
    examples:
      type: Example
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    example:
      type: Any
    encoding:
      name: EncodingProperty
      plural: EncodingProperties
      structure: map
    extension: *id001
- name: EncodingProperty
  fields:
    contentType: {
      }
    headers:
      structure: map
      type: String
    style: {
      }
    explode:
      type: Boolean
    allowReserved:
      type: Boolean
    extension: *id001
- name: ExternalDocs
  fields:
    description: {
      }
    url: {
      }
    extension: *id001
- name: Header
  imports:
    impl:
    - Overlay
  fields:
    description: &id012 {
      }
    required: &id011
      type: Boolean
    deprecated: &id010
      type: Boolean
    allowEmptyValue: &id009
      type: Boolean
    style: &id008 {
      }
    explode: &id007
      type: Boolean
    allowReserved: &id006
      type: Boolean
    schema: &id005 {
      }
    example: &id004
      type: Any
    examples: &id003
      type: Example
      structure: map
      keyPattern: '[a-zA-Z0-9\._-]+'
    content: &id002
      name: ContentMediaType
      type: MediaType
      structure: map
    extension: *id001
- name: Parameter
  imports:
    impl:
    - Overlay
  fields:
    extension: *id001
    content: *id002
    examples: *id003
    example: *id004
    schema: *id005
    allowReserved: *id006
    explode: *id007
    style: *id008
    allowEmptyValue: *id009
    deprecated: *id010
    required: *id011
    description: *id012
    name: {
      }
    in: {
      }
- name: Schema
  imports:
    impl:
    - Optional
    - JsonPointer
    - Overlay
  fields:
    title: {
      }
    multipleOf:
      type: Number
    maximum:
      type: Number
    exclusiveMaximum:
      type: Boolean
    minimum:
      type: Number
    exclusiveMinimum:
      type: Boolean
    maxLength:
      type: Int
    minLength:
      type: Int
    pattern: {
      }
    maxItems:
      type: Int
    minItems:
      type: Int
    uniqueItems:
      type: Boolean
    maxProperties:
      type: Int
    minProperties:
      type: Int
    required:
      name: RequiredField
      structure: collection
    enum:
      type: Any
      structure: collection
    type: {
      }
    allOf:
      name: AllOfSchema
      type: Schema
      structure: collection
    oneOf:
      name: OneOfSchema
      type: Schema
      structure: collection
    anyOf:
      name: AnyOfSchema
      type: Schema
      structure: collection
    not:
      name: NotSchema
      type: Schema
    items:
      name: ItemsSchema
      type: Schema
    properties:
      name: Property
      plural: Properties
      type: Schema
      structure: map
    additionalPropertiesSchema:
      parentPath: additionalProperties
      type: Schema
    additionalPropertiesBoolean:
      name: AdditionalProperties
      parentPath: additionalProperties
      type: Boolean
    description: {
      }
    format: {
      }
    default:
      type: Any
    nullable:
      type: Boolean
    discriminator: {
      }
    readOnly:
      type: Boolean
    writeOnly:
      type: Boolean
    xml: {
      }
    externalDocs: {
      }
    example:
      type: Any
    deprecated:
      type: Boolean
    extension: *id001
- name: Xml
  fields:
    name: {
      }
    namespace: {
      }
    prefix: {
      }
    attribute:
      type: Boolean
    wrapped:
      type: Boolean
    extension: *id001
- name: Example
  imports:
    impl:
    - Overlay
  fields:
    summary: {
      }
    description: {
      }
    value:
      type: Any
    externalValue: {
      }
    extension: *id001
- name: Discriminator
  fields:
    propertyName: {
      }
    mapping:
      type: String
      structure: map