@partial_raw

    @embed_once ../class_definition.kate

    @var(GenerateClassDefinition())

    @default_no_raw
            private var validationResults : ValidationResults? = null;

            override fun _fixJson(json : JsonNode) : JsonNode {
                var json = json
                if (json.isMissingNode) {
                    json = _jsonObject()
                }
                if (!json.has("paths")) {
                    (json as ObjectNode).putObject("paths")
                }
                return json
            }

            override fun validate() {
                ValidationContext.open().use { context ->
                    validationResults = ValidationContext.getValidationResults()
                    OpenApi3Validator().validate(Overlay.of(this))
                }
            }

            override fun isValid() : Boolean {
                if (validationResults == null) {
                    validate()
                }
                return validationResults!!.severity.lt(Severity.ERROR);
            }

            override fun getValidationResults() : ValidationResults {
                if (validationResults == null) {
                    validate()
                }
                return validationResults!!
            }

            override fun getValidationItems() : Collection<ValidationResults.ValidationItem> {
                return getValidationResults().getItems()
            }


    @end_default_no_raw

    @var(GenerateClassMembers())

    @var(EndClassDefinition())

@end_partial_raw