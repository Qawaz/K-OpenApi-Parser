@partial_raw

    @embed_once ../class_definition.kate

    @var(GenerateClassDefinition())

    @default_no_raw
            private val overlay : Overlay<Schema> = Overlay.Companion.of(this);

            override fun getName() : String? {
                return if(overlay.parent is MapOverlay<*>) overlay.pathInParent else null
            }

            override fun _findInternal(path : JsonPointer?) : JsonOverlay<*>? {
                return if (path?.matchesProperty("additionalProperties") == true) {
                    if(path.tail().matches()){
                        _getOverlay("additionalProperties", BooleanOverlay::class.java)
                    } else {
                        _get("additionalPropertiesSchema",SchemaImpl::class.java)?._findInternal(path.tail())
                    }
                } else {
                    super._findInternal(path)
                }
            }


    @end_default_no_raw

    @var(GenerateClassMembers())

    @var(EndClassDefinition())

@end_partial_raw