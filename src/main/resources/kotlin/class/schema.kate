@partial_raw

    @embed_once ../class_definition.kate

    @var(GenerateClassDefinition())

    @default_no_raw
            private val overlay : Overlay<Schema> = Overlay.Companion.of(this);

            override fun getName() : String? {
                return if(overlay.parent is MapOverlay<*>) overlay.pathInParent else null
            }

            override fun _findByPath(path: JsonPointer): JsonOverlay<*>? {
                return if(path.segments.firstOrNull() == "additionalProperties"){
                    val tail = JsonPointer(path.segments.drop(1))
                    if(json != null && tail.navigate(json!!) != null){
                        _getOverlay<Boolean>("additionalProperties") as BooleanOverlay
                    } else {
                        _get<SchemaImpl>("additionalPropertiesSchema")?.findByPointer(tail)
                    }
                } else {
                    super._findByPath(path)
                }
            }


    @end_default_no_raw

    @var(GenerateClassMembers())

    @var(EndClassDefinition())

@end_partial_raw