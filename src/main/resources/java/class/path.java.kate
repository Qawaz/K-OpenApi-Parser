@partial_raw

    @embed_once ../class_definition.kate

    @default_no_raw @var(GenerateClassDefinition()) @end_default_no_raw

    @default_no_raw
            private Overlay<Path> overlay = Overlay.Companion.of(this);

        	@Override
        	public String getPathString() {
        		return overlay.getParent() instanceof MapOverlay<?> ? overlay.getPathInParent() : null;
        	}

        	@Override
        	public Operation getGet() {
        		return getOperations().get("get");
        	}

        	@Override
        	public Operation getGet(boolean elaborate) {
        		return getOperations(elaborate).get("get");
        	}

        	@Override
        	public void setGet(Operation get) {
        		getOperations().put("get", get);
        	}

        	@Override
        	public Operation getPut() {
        		return getOperations().get("put");
        	}

        	@Override
        	public Operation getPut(boolean elaborate) {
        		return getOperations(elaborate).get("put");
        	}

        	@Override
        	public void setPut(Operation put) {
        		getOperations().put("put", put);
        	}

        	@Override
        	public Operation getPost() {
        		return getOperations().get("post");
        	}

        	@Override
        	public Operation getPost(boolean elaborate) {
        		return getOperations(elaborate).get("post");
        	}

        	@Override
        	public void setPost(Operation post) {
        		getOperations().put("post", post);
        	}

        	@Override
        	public Operation getDelete() {
        		return getOperations().get("delete");
        	}

        	@Override
        	public Operation getDelete(boolean elaborate) {
        		return getOperations(elaborate).get("delete");
        	}

        	@Override
        	public void setDelete(Operation delete) {
        		getOperations().put("delete", delete);
        	}

        	@Override
        	public Operation getOptions() {
        		return getOperations().get("options");
        	}

        	@Override
        	public Operation getOptions(boolean elaborate) {
        		return getOperations(elaborate).get("options");
        	}

        	@Override
        	public void setOptions(Operation options) {
        		getOperations().put("options", options);
        	}

        	@Override
        	public Operation getHead() {
        		return getOperations().get("head");
        	}

        	@Override
        	public Operation getHead(boolean elaborate) {
        		return getOperations(elaborate).get("head");
        	}

        	@Override
        	public void setHead(Operation head) {
        		getOperations().put("head", head);
        	}

        	@Override
        	public Operation getPatch() {
        		return getOperations().get("patch");
        	}

        	@Override
        	public Operation getPatch(boolean elaborate) {
        		return getOperations(elaborate).get("patch");
        	}

        	@Override
        	public void setPatch(Operation patch) {
        		getOperations().put("patch", patch);
        	}

        	@Override
        	public Operation getTrace() {
        		return getOperations().get("trace");
        	}

        	@Override
        	public Operation getTrace(boolean elaborate) {
        		return getOperations(elaborate).get("trace");
        	}

        	@Override
        	public void setTrace(Operation trace) {
        		getOperations().put("trace", trace);
        	}


    @end_default_no_raw

    @default_no_raw @var(ClassMembers) @end_default_no_raw

    @default_no_raw @var(EndClassDefinition()) @end_default_no_raw

@end_partial_raw